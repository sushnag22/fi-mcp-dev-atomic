name: CI/CD â†’ Cloud Run
on:
  push:
    branches: [ master ]

permissions:
  contents: read
  id-token: write

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      REPOSITORY: app-repo
      IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Create GAR repo if missing
        run: |
          if ! gcloud artifacts repositories describe "$REPOSITORY" \
            --location=$REGION --project=$PROJECT_ID &>/dev/null; then
            gcloud artifacts repositories create "$REPOSITORY" \
              --repository-format=docker --location=$REGION \
              --description="auto-created repo"
          fi

      - name: Configure Docker auth
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build image
        run: docker build -t ${{ env.IMAGE }}:${{ github.sha }} .

      - name: Push image
        run: docker push ${{ env.IMAGE }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        id: deploy
        with:
          service: app-service
          image: ${{ env.IMAGE }}:${{ github.sha }}
          region: ${{ env.REGION }}
          project_id: ${{ env.PROJECT_ID }}
          flags: |
            --platform managed
            --allow-unauthenticated
            --port 8080

      - name: Smoke-test /health
        run: curl -fsSL "${{ steps.deploy.outputs.url }}/health"
